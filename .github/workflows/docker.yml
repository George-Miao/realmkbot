name: Publish Docker image

on:
  workflow_dispatch:
  push:
    paths-ignore:
      - 'README.md'
      - 'LICENSE'
      - '.gitignore'
      - '.vscode/**'

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-push-image:
    runs-on: ubuntu-latest
    # Sets the permissions granted to the `GITHUB_TOKEN` for the actions in this job.
    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install nix
        uses: cachix/install-nix-action@v31
        with:
          nix_path: nixpkgs=channel:nixos-unstable

      # Build the Docker image using Nix, results in a Docker image tarball
      # The output path is recorded into a variable for later use
      - name: Build image
        id: build
        run: |
          IMAGE_PATH=$(nix build '.#docker' --print-out-paths --no-link)
          echo "IMAGE_PATH=$IMAGE_PATH" >> $GITHUB_ENV

      - name: Log in to the Container registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # This step uses [docker/metadata-action](https://github.com/docker/metadata-action#about) to extract tags and labels that will be applied to the specified image. The `id` "meta" allows the output of this step to be referenced in a subsequent step. The `images` value provides the base name for the tags and labels.
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=sha
      - name: Install skopeo
        uses: awalsh128/cache-apt-pkgs-action@latest
        with:
          packages: skopeo
          version: ${{ steps.meta.outputs.tags }}

      - name: Push Docker image
        id: push
        run: |
          SRC=docker-archive:$IMAGE_PATH
          DEST=docker://${{ steps.meta.outputs.tags }}
          skopeo copy \
            --src-no-creds \
            --dest-creds='${{ github.actor }}:${{ secrets.GITHUB_TOKEN }}' \
            $SRC $DEST
          skopeo copy \
            --src-no-creds \
            --dest-creds='${{ github.actor }}:${{ secrets.GITHUB_TOKEN }}' \
            $SRC docker://latest
